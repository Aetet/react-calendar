{
  "name": "envify",
  "version": "0.2.0",
  "description": "Selectively replace Node-style environment variables with plain strings.",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "bin": {
    "envify": "bin/envify"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/envify.git"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com/"
  },
  "license": "MIT",
  "devDependencies": {
    "tape": "~0.3.3"
  },
  "dependencies": {
    "through": "~2.3.4",
    "falafel": "~0.2.1"
  },
  "keywords": [
    "environment",
    "variables",
    "browserify",
    "configuration"
  ],
  "readme": "# envify #\n\nSelectively replace Node-style environment variables with plain strings.\nAvailable as a standalone CLI tool and a\n[Browserify](http://browserify.org) v2 transform.\n\nWorks best in combination with [uglifyify](http://github.com/hughsk/uglifyify).\n\n## Installation ##\n\nIf you're using the module with Browserify:\n\n``` bash\nnpm install envify browserify\n```\n\nOr, for the CLI:\n\n``` bash\nsudo npm install -g envify\n```\n\n## Usage ##\n\nenvify will replace your environment variable checks with ordinary strings -\nonly the variables you use will be included, so you don't have to worry about,\nsay, `AWS_SECRET_KEY` leaking through either. Take this example script:\n\n``` javascript\nif (process.env.NODE_ENV === \"development\") {\n  console.log('development only')\n}\n```\n\nAfter running it through envify with `NODE_ENV` set to `production`, you'll\nget this:\n\n``` javascript\nif (\"production\" === \"development\") {\n  console.log('development only')\n}\n```\n\nBy running this through a good minifier (e.g.\n[UglifyJS2](https://github.com/mishoo/UglifyJS)), the above code would be\nstripped out completely.\n\n## CLI Usage ##\n\nWith browserify:\n\n``` bash\nbrowserify index.js -t envify > bundle.js\n```\n\nOr standalone:\n\n``` bash\nenvify index.js > bundle.js\n```\n\n## Module Usage ##\n\n**require('envify')**\n\nReturns a transform stream that updates based on the Node process'\n`process.env` object.\n\n**require('envify/custom')([environment])**\n\nIf you want to stay away from your environment variables, you can supply\nyour own object to use in its place:\n\n``` javascript\nvar browserify = require('browserify')\n  , envify = require('envify/custom')\n  , fs = require('fs')\n\nvar bundle = browserify('main.js')\n  , output = fs.createWriteStream('bundle.js')\n\nb.transform(envify({\n  NODE_ENV: 'development'\n}))\nb.bundle().pipe(output)\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hughsk/envify/issues"
  },
  "homepage": "https://github.com/hughsk/envify",
  "_id": "envify@0.2.0",
  "dist": {
    "shasum": "f0befddcdab3235fdd9a61b3a87f30f3bbd0b03f"
  },
  "_from": "envify@~0.2.0",
  "_resolved": "https://registry.npmjs.org/envify/-/envify-0.2.0.tgz"
}
